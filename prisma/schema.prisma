generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model businesses {
  business_id            Int                    @id @default(autoincrement())
  nit                    String                 @unique @db.VarChar(20)
  business_name          String                 @db.VarChar(255)
  business_type          String?                @db.VarChar(50)
  tax_regime             String?                @db.VarChar(50)
  address                String?                @db.VarChar(255)
  phone                  String?                @db.VarChar(50)
  email                  String?                @db.VarChar(255)
  dian_resolution_number String?                @db.VarChar(100)
  dian_resolution_date   DateTime?              @db.Date
  invoicing_prefix       String?                @db.VarChar(10)
  invoicing_start_number Int?
  invoicing_end_number   Int?
  dian_technical_key     String?                @db.VarChar(255)
  created_at             DateTime?              @default(now()) @db.Timestamp(6)
  updated_at             DateTime?              @default(now()) @db.Timestamp(6)
  categories             categories[]
  clients                clients[]
  dian_logs              dian_logs[]
  invoices               invoices[]
  notifications          notifications[]
  products_services      products_services[]
  user_business_access   user_business_access[]
}

model categories {
  category_id   Int         @id @default(autoincrement())
  business_id   Int?
  category_name String      @db.VarChar(100)
  type          String?     @db.VarChar(50)
  created_at    DateTime?   @default(now()) @db.Timestamp(6)
  updated_at    DateTime?   @default(now()) @db.Timestamp(6)
  businesses    businesses? @relation(fields: [business_id], references: [business_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([business_id, category_name])
}

model clients {
  client_id             Int         @id @default(autoincrement())
  business_id           Int?
  identification_type   String?     @db.VarChar(20)
  identification_number String      @db.VarChar(100)
  full_name             String      @db.VarChar(255)
  email                 String?     @db.VarChar(255)
  address               String?     @db.VarChar(255)
  phone                 String?     @db.VarChar(50)
  created_at            DateTime?   @default(now()) @db.Timestamp(6)
  updated_at            DateTime?   @default(now()) @db.Timestamp(6)
  businesses            businesses? @relation(fields: [business_id], references: [business_id], onDelete: Cascade, onUpdate: NoAction)
  invoices              invoices[]

  @@unique([business_id, identification_type, identification_number])
}

model dian_logs {
  log_id           Int         @id @default(autoincrement())
  business_id      Int?
  invoice_id       Int?
  operation_type   String      @db.VarChar(50)
  timestamp        DateTime?   @default(now()) @db.Timestamp(6)
  request_payload  Json?       @db.Json
  response_payload Json?       @db.Json
  http_status_code Int?
  is_successful    Boolean
  error_message    String?
  businesses       businesses? @relation(fields: [business_id], references: [business_id], onDelete: Cascade, onUpdate: NoAction)
  invoices         invoices?   @relation(fields: [invoice_id], references: [invoice_id], onUpdate: NoAction)
}

model invoice_item_taxes {
  invoice_item_tax_id Int            @id @default(autoincrement())
  item_id             Int?
  tax_id              Int?
  taxable_basis       Decimal        @db.Decimal(18, 2)
  calculated_amount   Decimal        @db.Decimal(18, 2)
  applied_percentage  Decimal        @db.Decimal(5, 2)
  invoice_items       invoice_items? @relation(fields: [item_id], references: [item_id], onDelete: Cascade, onUpdate: NoAction)
  taxes               taxes?         @relation(fields: [tax_id], references: [tax_id], onDelete: NoAction, onUpdate: NoAction)
}

model invoice_items {
  item_id            Int                  @id @default(autoincrement())
  invoice_id         Int?
  product_service_id Int?
  description        String               @db.VarChar(255)
  quantity           Decimal              @db.Decimal(18, 2)
  unit_price         Decimal              @db.Decimal(18, 2)
  line_total         Decimal              @db.Decimal(18, 2)
  dian_item_code     String?              @db.VarChar(50)
  notes              String?
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  invoice_item_taxes invoice_item_taxes[]
  invoices           invoices?            @relation(fields: [invoice_id], references: [invoice_id], onDelete: Cascade, onUpdate: NoAction)
  products_services  products_services?   @relation(fields: [product_service_id], references: [product_service_id], onDelete: NoAction, onUpdate: NoAction)
}

model invoices {
  invoice_id       Int             @id @default(autoincrement())
  business_id      Int?
  client_id        Int?
  prefix           String?         @db.VarChar(10)
  consecutive      Int
  issue_date       DateTime        @db.Date
  due_date         DateTime?       @db.Date
  status           String          @db.VarChar(50)
  currency         String?         @default("COP") @db.VarChar(10)
  subtotal         Decimal         @db.Decimal(18, 2)
  total_taxes      Decimal?        @default(0) @db.Decimal(18, 2)
  total_retentions Decimal?        @default(0) @db.Decimal(18, 2)
  total            Decimal         @db.Decimal(18, 2)
  cufe             String?         @db.VarChar(255)
  qr_code          String?
  payment_method   String?         @db.VarChar(50)
  notes            String?
  created_at       DateTime?       @default(now()) @db.Timestamp(6)
  updated_at       DateTime?       @default(now()) @db.Timestamp(6)
  dian_logs        dian_logs[]
  invoice_items    invoice_items[]
  businesses       businesses?     @relation(fields: [business_id], references: [business_id], onDelete: Cascade, onUpdate: NoAction)
  clients          clients?        @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([business_id, prefix, consecutive])
}

model notifications {
  notification_id     Int         @id @default(autoincrement())
  user_id             Int?
  business_id         Int?
  notification_type   String      @db.VarChar(50)
  message             String
  scheduled_send_time DateTime    @db.Timestamp(6)
  sent_at             DateTime?   @db.Timestamp(6)
  send_channel        String?     @db.VarChar(50)
  send_status         String?     @db.VarChar(50)
  related_entity_type String?     @db.VarChar(50)
  related_entity_id   Int?
  created_at          DateTime?   @default(now()) @db.Timestamp(6)
  businesses          businesses? @relation(fields: [business_id], references: [business_id], onDelete: Cascade, onUpdate: NoAction)
  users               users?      @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
}

model products_services {
  product_service_id Int             @id @default(autoincrement())
  business_id        Int?
  name               String          @db.VarChar(255)
  description        String?
  unit_price         Decimal         @db.Decimal(18, 2)
  type               String?         @db.VarChar(50)
  dian_code          String?         @db.VarChar(50)
  is_active          Boolean?        @default(true)
  created_at         DateTime?       @default(now()) @db.Timestamp(6)
  updated_at         DateTime?       @default(now()) @db.Timestamp(6)
  invoice_items      invoice_items[]
  businesses         businesses?     @relation(fields: [business_id], references: [business_id], onDelete: Cascade, onUpdate: NoAction)
}

model tax_deadlines {
  deadline_id      Int       @id @default(autoincrement())
  declaration_name String    @db.VarChar(100)
  period           String?   @db.VarChar(50)
  due_date         DateTime  @db.Date
  created_at       DateTime? @default(now()) @db.Timestamp(6)
}

model taxes {
  tax_id             Int                  @id @default(autoincrement())
  tax_name           String               @db.VarChar(50)
  tax_type           String?              @db.VarChar(50)
  percentage         Decimal              @db.Decimal(5, 2)
  is_retention       Boolean?             @default(false)
  dian_code          String?              @db.VarChar(20)
  is_active          Boolean?             @default(true)
  applies_to         String?              @db.VarChar(50)
  valid_from         DateTime?            @db.Date
  valid_to           DateTime?            @db.Date
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  invoice_item_taxes invoice_item_taxes[]
}

model user_business_access {
  user_id     Int
  business_id Int
  role        String?    @db.VarChar(50)
  assigned_at DateTime?  @default(now()) @db.Timestamp(6)
  businesses  businesses @relation(fields: [business_id], references: [business_id], onDelete: Cascade, onUpdate: NoAction)
  users       users      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, business_id])
}

model users {
  user_id              Int                    @id @default(autoincrement())
  email                String                 @unique @db.VarChar(255)
  password_hash        String                 @db.VarChar(255)
  first_name           String?                @db.VarChar(100)
  last_name            String?                @db.VarChar(100)
  user_type            String?                @db.VarChar(50)
  created_at           DateTime?              @default(now()) @db.Timestamp(6)
  updated_at           DateTime?              @default(now()) @db.Timestamp(6)
  is_active            Boolean?               @default(true)
  google_id            String?                @db.VarChar
  notifications        notifications[]
  user_business_access user_business_access[]
}
